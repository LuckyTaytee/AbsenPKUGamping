{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _Navigator = _interopRequireDefault(require(\"./src/navigations/Navigator\"));\n\nvar Font = _interopRequireWildcard(require(\"expo-font\"));\n\nvar _expo = require(\"expo\");\n\nvar _jsxFileName = \"E:\\\\Programs\\\\Android\\\\Projects\\\\ReactNative\\\\latihan2\\\\App.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nvar App = function (_React$Component) {\n  (0, _inherits2.default)(App, _React$Component);\n\n  var _super = _createSuper(App);\n\n  function App() {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      isFontLoaded: false\n    };\n    return _this;\n  }\n\n  (0, _createClass2.default)(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      return _regenerator.default.async(function componentDidMount$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regenerator.default.awrap(Font.loadAsync({\n                'MontBold': require('../fonts/Mont-Bold.otf'),\n                'MontRegular': require('../fonts/Mont-Regular.otf'),\n                'MontThin': require('../fonts/Mont-Thin.otf')\n              }));\n\n            case 2:\n              this.setState({\n                isFontLoaded: true\n              });\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return _react.default.createElement(_Navigator.default, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 7\n        }\n      });\n    }\n  }]);\n  return App;\n}(_react.default.Component);\n\nexports.default = App;\n\nvar styles = _reactNative.StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"sources":["E:/Programs/Android/Projects/ReactNative/latihan2/App.js"],"names":["App","state","isFontLoaded","Font","loadAsync","require","setState","React","Component","styles","StyleSheet","create","container","flex","backgroundColor","alignItems","justifyContent"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;;;;;;;IAEqBA,G;;;;;;;;;;;;;;;UACnBC,K,GAAQ;AACNC,MAAAA,YAAY,EAAG;AADT,K;;;;;;;;;;;;gDAIAC,IAAI,CAACC,SAAL,CAAe;AACjB,4BAAaC,OAAO,CAAC,wBAAD,CADH;AAEjB,+BAAgBA,OAAO,CAAC,2BAAD,CAFN;AAGjB,4BAAaA,OAAO,CAAC,wBAAD;AAHH,eAAf,C;;;AAKN,mBAAKC,QAAL,CAAc;AAACJ,gBAAAA,YAAY,EAAC;AAAd,eAAd;;;;;;;;;;;6BAEM;AACN,aACE,6BAAC,kBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAGD;;;EAhB8BK,eAAMC,S;;;;AAoBvC,IAAMC,MAAM,GAAGC,wBAAWC,MAAX,CAAkB;AAC/BC,EAAAA,SAAS,EAAE;AACTC,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,eAAe,EAAE,MAFR;AAGTC,IAAAA,UAAU,EAAE,QAHH;AAITC,IAAAA,cAAc,EAAE;AAJP;AADoB,CAAlB,CAAf","sourcesContent":["import React from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\nimport AppNavigator from './src/navigations/Navigator';\nimport * as Font from 'expo-font';\nimport {AppLoading} from 'expo';\n\nexport default class App extends React.Component{\n  state = {\n    isFontLoaded : false\n}\nasync componentDidMount(){\n    await Font.loadAsync({\n        'MontBold' : require('../fonts/Mont-Bold.otf'),\n        'MontRegular' : require('../fonts/Mont-Regular.otf'),\n        'MontThin' : require('../fonts/Mont-Thin.otf'),\n    });\n    this.setState({isFontLoaded:true})\n}\n  render(){\n    return(\n      <AppNavigator/>\n    );\n  }\n}\n\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});"]},"metadata":{},"sourceType":"script"}