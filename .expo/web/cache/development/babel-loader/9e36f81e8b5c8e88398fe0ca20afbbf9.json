{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactNativeGestureHandler = require(\"react-native-gesture-handler\");\n\nvar _reactNative = require(\"react-native\");\n\nvar _reactNativeTableComponent = require(\"react-native-table-component\");\n\nvar _jsxFileName = \"E:\\\\Programs\\\\Android\\\\Projects\\\\ReactNative\\\\latihan2\\\\src\\\\screens\\\\Home.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nvar Home = function (_React$Component) {\n  (0, _inherits2.default)(Home, _React$Component);\n\n  var _super = _createSuper(Home);\n\n  function Home() {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, Home);\n    _this = _super.call(this);\n\n    _this.getCurrentTime = function () {\n      var hour = new Date().getHours();\n      var minutes = new Date().getMinutes();\n      var seconds = new Date().getSeconds();\n\n      if (hour < 10) {\n        hour = '0' + hour;\n      }\n\n      if (minutes < 10) {\n        minutes = '0' + minutes;\n      }\n\n      if (seconds < 10) {\n        seconds = '0' + seconds;\n      }\n\n      _this.setState({\n        currentTime: hour + ':' + minutes + ':' + seconds\n      });\n\n      _this.setState({\n        absenTime: hour + ':' + minutes\n      });\n    };\n\n    _this.getAbsenTime = function () {\n      if (_this.state.absenType === \"Absen Masuk\") {\n        var newArray = _this.state.tableData;\n        newArray[0][2] = [_this.state.absenTime];\n        alert(\"Anda Masuk pukul \" + newArray[0][2]);\n\n        _this.setState({\n          tableData: newArray\n        });\n\n        _this.state.absenType = \"Absen Keluar\";\n      } else {\n        var _newArray = _this.state.tableData;\n        _newArray[1][2] = [_this.state.absenTime];\n        alert(\"Anda Keluar pukul \" + _newArray[1][2]);\n\n        _this.setState({\n          tableData: _newArray\n        });\n\n        _this.state.absenType = \"Absen Masuk\";\n      }\n    };\n\n    _this.state = {\n      currentTime: null,\n      absenTime: null,\n      absenType: 'Absen Masuk',\n      tableHead: ['Jadwal', 'Acuan', 'Jam', 'Status'],\n      tableData: [['Masuk', '07.00', '-', 'Terlambat'], ['Keluar', '14.00', '-', 'Tepat']]\n    };\n    return _this;\n  }\n\n  (0, _createClass2.default)(Home, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getCurrentTime();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      clearInterval(this.timer);\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.timer = setInterval(function () {\n        _this2.getCurrentTime();\n      }, 1000);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var state = this.state;\n      var navigate = this.props.navigation.navigate;\n      return _react.default.createElement(_reactNative.ImageBackground, {\n        source: require('../images/bg-home.jpg'),\n        style: {\n          width: \"100%\",\n          height: '100%'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }\n      }, _react.default.createElement(_reactNative.View, {\n        style: {\n          width: '100%',\n          alignSelf: 'center',\n          flex: 1\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 17\n        }\n      }, _react.default.createElement(_reactNative.Text, {\n        style: [styles.text, {\n          fontFamily: \"MontBold\",\n          marginTop: 35\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }\n      }, \"Selamat datang,\", _react.default.createElement(_reactNative.Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 25\n        }\n      }, '\\t', '\\t', \"[Nama]\")), _react.default.createElement(_reactNative.Text, {\n        style: [styles.text, {\n          fontFamily: \"MontRegular\"\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }\n      }, \"Waktu saat ini :\"), _react.default.createElement(_reactNative.Text, {\n        style: styles.timeText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }\n      }, this.state.currentTime), _react.default.createElement(_reactNative.Text, {\n        style: [styles.text, {\n          fontFamily: \"MontRegular\"\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }\n      }, \"Saat ini Anda terjadwal,\", _react.default.createElement(_reactNative.Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 25\n        }\n      }, '\\t', '\\t', \"[Shift] :\")), _react.default.createElement(_reactNative.View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }\n      }, _react.default.createElement(_reactNativeTableComponent.Table, {\n        borderStyle: {\n          borderWidth: 2,\n          borderColor: '#6B9080'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 25\n        }\n      }, _react.default.createElement(_reactNativeTableComponent.Row, {\n        data: state.tableHead,\n        style: styles.tableHead,\n        textStyle: styles.tableText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 29\n        }\n      }), _react.default.createElement(_reactNativeTableComponent.Rows, {\n        data: state.tableData,\n        style: styles.tableBody,\n        textStyle: styles.tableText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 29\n        }\n      }))), _react.default.createElement(_reactNativeGestureHandler.TouchableOpacity, {\n        onPress: this.getAbsenTime,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }\n      }, _react.default.createElement(_reactNative.View, {\n        style: [styles.button, {\n          backgroundColor: 'white'\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 25\n        }\n      }, _react.default.createElement(_reactNative.Text, {\n        style: {\n          fontFamily: \"MontBold\",\n          color: \"#00716F\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 33\n        }\n      }, this.state.absenType))), _react.default.createElement(_reactNativeGestureHandler.TouchableOpacity, {\n        onPress: function onPress() {\n          return navigate('History');\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 21\n        }\n      }, _react.default.createElement(_reactNative.View, {\n        style: [styles.button, {\n          backgroundColor: '#06C7C4',\n          marginBottom: 25\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 25\n        }\n      }, _react.default.createElement(_reactNative.Text, {\n        id: \"buttonabsen\",\n        style: {\n          fontFamily: \"MontBold\",\n          color: \"#00716F\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 29\n        }\n      }, \"Riwayat Absen\")))));\n    }\n  }]);\n  return Home;\n}(_react.default.Component);\n\nexports.default = Home;\n\nvar styles = _reactNative.StyleSheet.create({\n  timeText: {\n    marginTop: _reactNative.Platform.OS === 'ios' ? 0 : 0,\n    paddingHorizontal: 25,\n    fontFamily: 'MontBold',\n    fontSize: 50,\n    color: 'white'\n  },\n  button: {\n    marginHorizontal: 55,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    marginTop: 20,\n    paddingVertical: 8,\n    borderRadius: 23\n  },\n  text: {\n    fontSize: 18,\n    color: 'white',\n    paddingHorizontal: 25,\n    marginTop: 25\n  },\n  container: {\n    flex: 1,\n    padding: 25\n  },\n  tableHead: {\n    height: 40,\n    backgroundColor: '#A4C3B2'\n  },\n  tableText: {\n    margin: 6\n  },\n  tableBody: {\n    height: 40,\n    backgroundColor: '#fff'\n  }\n});","map":{"version":3,"sources":["E:/Programs/Android/Projects/ReactNative/latihan2/src/screens/Home.js"],"names":["Home","getCurrentTime","hour","Date","getHours","minutes","getMinutes","seconds","getSeconds","setState","currentTime","absenTime","getAbsenTime","state","absenType","newArray","tableData","alert","tableHead","clearInterval","timer","setInterval","navigate","props","navigation","require","width","height","alignSelf","flex","styles","text","fontFamily","marginTop","timeText","container","borderWidth","borderColor","tableText","tableBody","button","backgroundColor","color","marginBottom","React","Component","StyleSheet","create","Platform","OS","paddingHorizontal","fontSize","marginHorizontal","alignItems","justifyContent","paddingVertical","borderRadius","padding","margin"],"mappings":"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","sourcesContent":["import React from 'react';\r\n//import Icon from '@expo/vector-icons/MaterialCommunityIcons';\r\nimport {ScrollView, TouchableOpacity} from 'react-native-gesture-handler';\r\nimport {View, Text, ImageBackground, Button, StyleSheet, Platform, FlatList, Dimensions } from 'react-native';\r\nimport { Table, Row, Rows } from 'react-native-table-component';\r\n\r\nexport default class Home extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = { currentTime: null, absenTime: null, absenType:'Absen Masuk',\r\n            tableHead: ['Jadwal', 'Acuan', 'Jam', 'Status'],\r\n            tableData: [\r\n              ['Masuk', '07.00', '-', 'Terlambat'],\r\n              ['Keluar', '14.00', '-', 'Tepat']\r\n            ]  \r\n        }\r\n    }\r\n    \r\n    componentDidMount() {\r\n        this.getCurrentTime();\r\n    }\r\n    \r\n    getCurrentTime = () => {\r\n        let hour = new Date().getHours();\r\n        let minutes = new Date().getMinutes();\r\n        let seconds = new Date().getSeconds();\r\n    \r\n        if (hour < 10) {\r\n            hour = '0' +  hour;\r\n        }\r\n\r\n        if (minutes < 10) {\r\n          minutes = '0' + minutes;\r\n        }\r\n    \r\n        if (seconds < 10) {\r\n          seconds = '0' + seconds;\r\n        }\r\n    \r\n        this.setState({ currentTime: hour + ':' + minutes + ':' + seconds});\r\n        this.setState({ absenTime: hour + ':' + minutes});\r\n    }\r\n\r\n    getAbsenTime = () => {        \r\n        if (this.state.absenType === \"Absen Masuk\") {\r\n            let newArray = this.state.tableData;\r\n            newArray[0][2] = [this.state.absenTime];\r\n            alert(\"Anda Masuk pukul \" + newArray[0][2]);\r\n            this.setState({tableData: newArray});\r\n            this.state.absenType = \"Absen Keluar\"\r\n        } else {\r\n            let newArray = this.state.tableData;\r\n            newArray[1][2] = [this.state.absenTime];\r\n            alert(\"Anda Keluar pukul \" + newArray[1][2]);\r\n            this.setState({tableData: newArray});\r\n            this.state.absenType = \"Absen Masuk\"\r\n        }\r\n    }\r\n    \r\n    componentWillUnmount() {\r\n        clearInterval(this.timer);\r\n    }\r\n    \r\n    componentDidMount() {\r\n        this.timer = setInterval(() => {\r\n          this.getCurrentTime();\r\n        }, 1000);\r\n    }\r\n\r\n    render(){\r\n        const state = this.state;\r\n        const {navigate} = this.props.navigation\r\n        return(\r\n            <ImageBackground\r\n            source={require('../images/bg-home.jpg')}\r\n            style={{width:\"100%\", height:'100%'}}>\r\n\r\n                <View style={{width:'100%', alignSelf:'center', flex:1 }}>    \r\n                    <Text style={[styles.text, { fontFamily:\"MontBold\", marginTop:35 }]}>\r\n                        Selamat datang,\r\n                        <Text>{'\\t'}{'\\t'}[Nama]</Text>\r\n                    </Text>\r\n\r\n                    <Text style={[styles.text, { fontFamily:\"MontRegular\" }]}>\r\n                        Waktu saat ini :</Text>\r\n                    \r\n                    <Text style={styles.timeText}>\r\n                        {this.state.currentTime}</Text>\r\n\r\n                    <Text style={[styles.text, { fontFamily:\"MontRegular\" }]}>\r\n                        Saat ini Anda terjadwal,\r\n                        <Text>{'\\t'}{'\\t'}[Shift] :</Text>\r\n                    </Text>\r\n                    \r\n                    <View style={styles.container}>\r\n                        <Table borderStyle={{borderWidth: 2, borderColor: '#6B9080'}}>\r\n                            <Row data={state.tableHead} style={styles.tableHead} textStyle={styles.tableText}/>\r\n                            <Rows data={state.tableData} style={styles.tableBody} textStyle={styles.tableText}/>\r\n                        </Table>\r\n                    </View>\r\n\r\n                    <TouchableOpacity onPress={this.getAbsenTime}>\r\n                        <View style={[styles.button, {backgroundColor:'white'}]}>\r\n                                <Text style={{fontFamily:\"MontBold\", color:\"#00716F\"}}>\r\n                                    {this.state.absenType}</Text>\r\n                        </View>\r\n                    </TouchableOpacity>\r\n\r\n                    <TouchableOpacity onPress={()=>navigate('History')}>\r\n                        <View style={[styles.button, {backgroundColor:'#06C7C4', marginBottom:25}]}>             \r\n                            <Text id='buttonabsen' style={{fontFamily:\"MontBold\", color:\"#00716F\"}}>\r\n                                Riwayat Absen</Text>\r\n                        </View>\r\n                    </TouchableOpacity>\r\n                \r\n                </View>\r\n            </ImageBackground>\r\n        );\r\n    }\r\n}\r\n\r\nconst styles = StyleSheet.create(\r\n    {\r\n      timeText: {\r\n        marginTop: (Platform.OS === 'ios') ? 0 : 0,\r\n        paddingHorizontal:25,\r\n        fontFamily:'MontBold',\r\n        fontSize: 50,\r\n        color: 'white'\r\n      },\r\n\r\n      button: {\r\n        marginHorizontal:55,\r\n        alignItems:\"center\",\r\n        justifyContent:\"center\",\r\n        marginTop:20,\r\n        paddingVertical:8,\r\n        borderRadius:23\r\n      },\r\n\r\n      text: {\r\n        fontSize:18,\r\n        color:'white',\r\n        paddingHorizontal:25,\r\n        marginTop:25\r\n      },\r\n\r\n      container: { flex: 1, padding: 25},\r\n      tableHead: { height: 40, backgroundColor: '#A4C3B2' },\r\n      tableText: { margin: 6 },\r\n      tableBody: { height: 40, backgroundColor: '#fff' }\r\n  \r\n    });"]},"metadata":{},"sourceType":"script"}